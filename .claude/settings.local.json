{
  "permissions": {
    "allow": [
      "Bash(if [ -f app.vue ])",
      "Bash(then rm app.vue)",
      "Bash(else echo \"app.vue n''existe pas\")",
      "Bash(fi)",
      "Bash(if [ -f public/favicon.ico ])",
      "Bash(then rm public/favicon.ico)",
      "Bash(else echo \"public/favicon.ico n''existe pas\")",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(npm install:*)",
      "Bash(tree:*)",
      "Bash(dir:*)",
      "Bash(npx:*)",
      "Bash(if [ -f tailwind.config.ts ])",
      "Bash(then rm tailwind.config.ts)",
      "Bash(else echo \"tailwind.config.ts n''existe pas\")",
      "Bash(grep:*)",
      "Bash(if [ -f components/ui/avatar/index.ts ])",
      "Bash(then rm components/ui/avatar/index.ts)",
      "Bash(else echo \"components/ui/avatar/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/badge/index.ts ])",
      "Bash(then rm components/ui/badge/index.ts)",
      "Bash(else echo \"components/ui/badge/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/button/index.ts ])",
      "Bash(then rm components/ui/button/index.ts)",
      "Bash(else echo \"components/ui/button/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/dropdown-menu/index.ts ])",
      "Bash(then rm components/ui/dropdown-menu/index.ts)",
      "Bash(else echo \"components/ui/dropdown-menu/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/navigation-menu/index.ts ])",
      "Bash(then rm components/ui/navigation-menu/index.ts)",
      "Bash(else echo \"components/ui/navigation-menu/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/separator/index.ts ])",
      "Bash(then rm components/ui/separator/index.ts)",
      "Bash(else echo \"components/ui/separator/index.ts n''existe pas\")",
      "Bash(if [ -f components/ui/sheet/index.ts ])",
      "Bash(then rm components/ui/sheet/index.ts)",
      "Bash(else echo \"components/ui/sheet/index.ts n''existe pas\")",
      "mcp__ide__getDiagnostics",
      "Bash(findstr:*)",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(npm run dev:*)",
      "Bash(if [ -d \"public\" ])",
      "Bash(then echo \"public folder exists\")",
      "Bash(else mkdir -p public)",
      "Bash(if [ -f components/sections/HomeADN.vue ])",
      "Bash(then rm components/sections/HomeADN.vue)",
      "Bash(else echo \"components/sections/HomeADN.vue n''existe pas\")",
      "Bash(if [ -f components/sections/HomeFeatures.vue ])",
      "Bash(then rm components/sections/HomeFeatures.vue)",
      "Bash(else echo \"components/sections/HomeFeatures.vue n''existe pas\")",
      "Bash(if [ -f components/sections/HomeMasonry.vue ])",
      "Bash(then rm components/sections/HomeMasonry.vue)",
      "Bash(else echo \"components/sections/HomeMasonry.vue n''existe pas\")",
      "Bash(test -d composables)",
      "Bash(test:*)",
      "Bash(npm run build)",
      "WebSearch",
      "Bash(if [ -f .nuxt/content.db ])",
      "Bash(then rm .nuxt/content.db)",
      "Bash(else echo \".nuxt/content.db n''existe pas\")",
      "Bash(if [ -d \"supabase\" ])",
      "Bash(then rm -rf supabase)",
      "Bash(else echo \"supabase n''existe pas\")",
      "Bash(pkill -f \"npm run dev\")",
      "Bash(taskkill //F //IM node.exe)",
      "Bash(if [ -d \"lang\" ])",
      "Bash(then echo \"lang folder exists\")",
      "Bash(else mkdir -p lang)",
      "Bash(cp i18n/locales/fr.json lang/fr.json)",
      "Bash(cp i18n/locales/en.json lang/en.json)",
      "Bash(if [ -d \"types\" ])",
      "Bash(then echo \"types folder exists\")",
      "Bash(else mkdir -p types)",
      "Bash(git ls-tree -r 5d7783f --name-only)",
      "Bash(cat .nuxtrc)",
      "Bash(git ls-tree -r HEAD --name-only)",
      "Bash(git add -A)",
      "Bash(cp locales/fr.json i18n/locales/fr.json)",
      "Bash(cp locales/en.json i18n/locales/en.json)",
      "Bash(git commit -m \"$(cat <<''EOF''\nWIP: feature/auth - Refactoring structure i18n et ajout authentification\n\n- DÃ©placement des fichiers de traduction de i18n/locales/ vers locales/\n- Mise Ã  jour de la configuration i18n dans nuxt.config.ts\n- Ajout du composant modal d''authentification (AuthModal.vue)\n- Ajout des composants UI shadcn-vue (checkbox, input, label)\n- CrÃ©ation du composable useAuth pour la logique d''authentification\n- Ajout de nouvelles pages (about, categories, legal, produits)\n- Configuration de content.config.ts\n- Ajout des types de base de donnÃ©es Supabase\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(mv locales/*.json i18n/locales/)",
      "Bash(rmdir locales)",
      "Bash(git checkout -b feature/statut)",
      "Bash(git log -1 --format='%an %ae')",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: correction configuration i18n et Ã©chappement caractÃ¨re @\n\n- Correction du chemin langDir de ''locales'' vers ''i18n/locales''\n- Ã‰chappement du caractÃ¨re @ dans email_placeholder (fr.json et en.json)\n- RÃ©sout l''erreur \"Invalid linked format\" de vue-i18n\n- Les traductions s''affichent maintenant correctement\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(cat nuxt.config.ts)",
      "Bash(cat locales/fr.json)",
      "Bash(cat package.json)",
      "Bash(cat node_modules/@nuxtjs/i18n/README.md)",
      "Bash(PORT=3000 npm run dev)",
      "Bash(taskkill /F /IM node.exe)",
      "Bash(netstat -ano)",
      "Bash(taskkill //PID 25632 //F)",
      "Bash(if [ -d \"i18n/locales\" ])",
      "Bash(then echo \"i18n/locales existe\")",
      "Bash(else echo \"i18n/locales N''EXISTE PAS\")",
      "Bash(if [ -d \"locales\" ])",
      "Bash(then echo \"locales existe\")",
      "Bash(else echo \"locales N''EXISTE PAS\")",
      "Bash(taskkill /PID 10276 /F)",
      "Bash(powershell -Command \"Stop-Process -Id 10276 -Force\")",
      "Bash(Get-Process node -ErrorAction SilentlyContinue)",
      "Bash(Select-Object Id, CPU, WorkingSet)",
      "Bash(Format-Table)",
      "Bash(npm run db:schema)",
      "Bash(if [ -f supabase/audit.sql ])",
      "Bash(then rm supabase/audit.sql)",
      "Bash(else echo \"audit.sql n''existe pas\")",
      "Bash(if [ -f supabase/check-policies.sql ])",
      "Bash(then rm supabase/check-policies.sql)",
      "Bash(else echo \"check-policies.sql n''existe pas\")",
      "Bash(if [ -f supabase/create-policies.sql ])",
      "Bash(then rm supabase/create-policies.sql)",
      "Bash(else echo \"create-policies.sql n''existe pas\")",
      "Bash(if [ -f supabase/check-policy-details.sql ])",
      "Bash(then rm supabase/check-policy-details.sql)",
      "Bash(else echo \"check-policy-details.sql n''existe pas\")",
      "Bash(for dir in components/ui/*/)",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(git commit:*)",
      "Bash(powershell -Command:*)",
      "Bash(if [ -f AUDIT-COMPLET.md ])",
      "Bash(then rm AUDIT-COMPLET.md)",
      "Bash(else echo \"AUDIT-COMPLET.md n''existe pas\")",
      "Bash(if [ -f RECHERCHE-I18N-COMPLETE.md ])",
      "Bash(then rm RECHERCHE-I18N-COMPLETE.md)",
      "Bash(else echo \"RECHERCHE-I18N-COMPLETE.md n''existe pas\")",
      "Bash(if [ -f SUPABASE-CONFIG-REPORT.md ])",
      "Bash(then rm SUPABASE-CONFIG-REPORT.md)",
      "Bash(else echo \"SUPABASE-CONFIG-REPORT.md n''existe pas\")",
      "Bash(if [ -f VERIFICATION-I18N.md ])",
      "Bash(then rm VERIFICATION-I18N.md)",
      "Bash(else echo \"VERIFICATION-I18N.md n''existe pas\")",
      "Bash(if [ -d \"server\" ])",
      "Bash(then rm -rf server)",
      "Bash(else echo \"server n''existe pas\")",
      "Bash(if [ -d \"stores\" ])",
      "Bash(then rm -rf stores)",
      "Bash(else echo \"stores n''existe pas\")",
      "Bash(if [ -d \"components/ui/sheet\" ])",
      "Bash(then rm -rf components/ui/sheet)",
      "Bash(else echo \"components/ui/sheet n''existe pas\")",
      "Bash(if [ -d \"components/ui/navigation-menu\" ])",
      "Bash(then rm -rf components/ui/navigation-menu)",
      "Bash(else echo \"components/ui/navigation-menu n''existe pas\")",
      "Bash(if [ -d \"components/ui/dropdown-menu\" ])",
      "Bash(then rm -rf components/ui/dropdown-menu)",
      "Bash(else echo \"components/ui/dropdown-menu n''existe pas\")",
      "Bash(if [ -d \"components/ui/avatar\" ])",
      "Bash(then rm -rf components/ui/avatar)",
      "Bash(else echo \"components/ui/avatar n''existe pas\")",
      "Bash(if [ -d \"components/ui/badge\" ])",
      "Bash(then rm -rf components/ui/badge)",
      "Bash(else echo \"components/ui/badge n''existe pas\")",
      "Bash(if [ -d \"components/ui/separator\" ])",
      "Bash(then rm -rf components/ui/separator)",
      "Bash(else echo \"components/ui/separator n''existe pas\")",
      "Bash(if [ -f pages/compte/profil.vue.backup ])",
      "Bash(then rm pages/compte/profil.vue.backup)",
      "Bash(else echo \"pages/compte/profil.vue.backup n''existe pas\")",
      "Bash(if [ -f supabase/add-birth-date.sql ])",
      "Bash(then rm supabase/add-birth-date.sql)",
      "Bash(else echo \"supabase/add-birth-date.sql n''existe pas\")",
      "Bash(git reset:*)",
      "Bash(if [ -d \"components/ui/input\" ])",
      "Bash(then echo \"components/ui/input existe\")",
      "Bash(else mkdir -p components/ui/input)"
    ],
    "deny": [],
    "ask": []
  }
}
